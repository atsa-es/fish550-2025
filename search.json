[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Fish 550 Spring 2025",
    "section": "",
    "text": "Labs\n\nLab 1: Forecasting with ARIMA models\nLab 2: Interpolating with MARSS models\nLab 3: Dynamic Factor Analysis (DFA)\nLab 4: Hidden Markov Models\nLab 5: Dynamic Linear Models",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Labs</span>"
    ]
  },
  {
    "objectID": "Lab-1/Lab1-ARIMA.html",
    "href": "Lab-1/Lab1-ARIMA.html",
    "title": "2  Lab Intro",
    "section": "",
    "text": "Teams\nFor this lab you will use the material you have learned in the first 3 lectures to explore features of time series of salmon in the North Pacific (Alaska and E Asia). Then you will use ARIMA models to create forecasts and ask a research question with those forecasts.",
    "crumbs": [
      "ARIMA models",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Lab Intro</span>"
    ]
  },
  {
    "objectID": "Lab-1/Lab1-ARIMA.html#teams",
    "href": "Lab-1/Lab1-ARIMA.html#teams",
    "title": "2  Lab Intro",
    "section": "",
    "text": "Bristol Bay Data:\nBristol Bay Data:\nRuggerone & Irvine Data:\nRuggerone & Irvine Data:",
    "crumbs": [
      "ARIMA models",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Lab Intro</span>"
    ]
  },
  {
    "objectID": "Lab-1/Lab1-ARIMA.html#references",
    "href": "Lab-1/Lab1-ARIMA.html#references",
    "title": "2  Lab Intro",
    "section": "References",
    "text": "References\nHolmes, E. E. (2020) Fisheries Catch Forecasting https://fish-forecast.github.io/Fish-Forecast-Bookdown\nHyndman, R.J., & Athanasopoulos, G. (2018) Forecasting: principles and practice, 2nd edition, OTexts: Melbourne, Australia. https://otexts.com/fpp2/.\nPlus the lecture material on the ATSA website.",
    "crumbs": [
      "ARIMA models",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Lab Intro</span>"
    ]
  },
  {
    "objectID": "Lab-1/Lab1-ARIMA.html#type-of-questions-you-might-ask",
    "href": "Lab-1/Lab1-ARIMA.html#type-of-questions-you-might-ask",
    "title": "2  Lab Intro",
    "section": "Type of questions you might ask",
    "text": "Type of questions you might ask\n“Compare the accuracy of forecasts using best fit ARIMA models for pink salmon using the different regions in the Ruggerone & Irvine data. Is forecast accuracy is different for different regions?”\n“Compare the accuracy of total abundance forecasts using ARIMA models for Bristol Bay sockeye rivers and compare to the AKFW and UW FRI forecasts.”\n“Compare the accuracy of age-group forecasts using ARIMA models for Bristol Bay sockeye and compare to the AKFW and UW FRI forecasts.”\n“Use the Ruggerone & Irvine data and ARIMA models to study the autoregressive structure of pink, chum and sockeye. Are there differences by region (AK verus E Asia)?”\n“Compare the forecasts of total North Pacific pink and chum using 5, 10, 15, and 20 years of training data. Does forecast accuracy increase with more training data?”\n“Create 1-year forecasts of total North Pacific pink salmon using 20 years of training data for all of the Ruggerone and Irvine data. Is forecast error correlated with the PDO?”",
    "crumbs": [
      "ARIMA models",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Lab Intro</span>"
    ]
  },
  {
    "objectID": "Lab-1/Lab1-ARIMA.html#bristol-bay-sockeye-data",
    "href": "Lab-1/Lab1-ARIMA.html#bristol-bay-sockeye-data",
    "title": "2  Lab Intro",
    "section": "Bristol Bay Sockeye data",
    "text": "Bristol Bay Sockeye data\nThe bristol_bay_data_plus_covariates.rds file has Bristol Bay sockeye abundance for 9 rivers for 4 age-groups. The data are from Ovando et al 2021 Improving forecasts of sockeye salmon (Oncorhynchus nerka) with parametric and nonparametric models DOI: 10.1139/cjfas-2021-0287. You’ll find a copy in the lab folder. The data file also has the covariates for year that the smolts enter the ocean as used in Ovando et al. \nLoad the data.\n\n\nCode\nbb_data &lt;- readRDS(here::here(\"Lab-1\", \"Data_Images\", \"bristol_bay_data_plus_covariates.rds\"))\n\n\nThe data you will most likely want are\n\nret_yr The year the spawners return to the spawning grounds\nret The returns (number of fish in 1000s)\nsystem The river name\nage_group The age_group\nforecast.adfw The forecast from AK Fish and Wildlife\nforecast.fri The forecast from UW Fisheries Research Institute\nenv_* are some covariates at the year the age group entered the ocean\n\nIn the data file, the age group designation is “a.b” where “a” is number of years in freshwater and “b” is number of years in the ocean. The age of the spawners in then a+b.\n\nThe data\n\n\ncolnames:  brood_yr ret_yr system fw_age o_age age_group ret forecast.adfw forecast.fri env_pdo env_sst env_slp env_upstr \n\n\nsystem (river):  Igushik Wood Nushagak Kvichak Naknek Egegik Ugashik \n\n\nage groups:  \n\n\nSome plots of the Bristol Bay data. Hmm there is a NA that was replaced with 0 it looks like.\n\n\nCode\nbb_data %&gt;% \n  filter(system==\"Kvichak\") %&gt;% \n  ggplot(aes(x=ret_yr, y=log(ret))) + \n    geom_line() + \n    ggtitle(\"log abundance by age group\") +\n    facet_wrap(~age_group)\n\n\n\n\n\nplotted by age group\n\n\n\n\n\n\nCode\nbb_data %&gt;% \n  group_by(system, ret_yr) %&gt;%\n  summarize(total = sum(ret, na.rm=TRUE)) %&gt;%\n  ggplot(aes(x=ret_yr, y=log(total))) + \n    geom_line() + \n    ggtitle(\"log abundance by river\") +\n    facet_wrap(~system)\n\n\n\n\n\ntotal across all 4 ages\n\n\n\n\n\nSome subsets of the data\nHere are some subsets of the data that you might want to use.\nLog total by age group\n\n\nCode\nsubdata &lt;- bb_data %&gt;% \n  group_by(age_group, ret_yr) %&gt;%\n  summarize(lntotal = log(sum(ret, na.rm=TRUE)))\nhead(subdata)\n\n\n# A tibble: 6 × 3\n# Groups:   age_group [1]\n  age_group ret_yr lntotal\n  &lt;chr&gt;      &lt;dbl&gt;   &lt;dbl&gt;\n1 1.2         1963    7.49\n2 1.2         1964    8.50\n3 1.2         1965    7.22\n4 1.2         1966    7.18\n5 1.2         1967    6.88\n6 1.2         1968    8.11\n\n\nLog total by river\n\n\nCode\nsubdata &lt;- bb_data %&gt;% \n  group_by(system, ret_yr) %&gt;%\n  summarize(lntotal = log(sum(ret, na.rm=TRUE)))\nhead(subdata)\n\n\n# A tibble: 6 × 3\n# Groups:   system [1]\n  system ret_yr lntotal\n  &lt;chr&gt;   &lt;dbl&gt;   &lt;dbl&gt;\n1 Egegik   1963    7.54\n2 Egegik   1964    7.55\n3 Egegik   1965    8.55\n4 Egegik   1966    7.95\n5 Egegik   1967    7.41\n6 Egegik   1968    6.88\n\n\nCompare fish that spend 2 years in ocean versus those that spend 3 years.\n\n\nCode\nsubdata &lt;- bb_data %&gt;% \n  mutate(\n    ocean_years = case_match(\n      age_group, \n      c(\"2.3\", \"1.3\") ~ \"3-yr-ocean\",\n      c(\"1.2\", \"2.2\") ~ \"2-yr-ocean\",\n      .default = age_group\n    )) %&gt;%\n  group_by(system, ocean_years, ret_yr) %&gt;%\n  summarize(lntotal = log(sum(ret, na.rm=TRUE)))\nhead(subdata)\n\n\n# A tibble: 6 × 4\n# Groups:   system, ocean_years [1]\n  system ocean_years ret_yr lntotal\n  &lt;chr&gt;  &lt;chr&gt;        &lt;dbl&gt;   &lt;dbl&gt;\n1 Egegik 2-yr-ocean    1963    7.02\n2 Egegik 2-yr-ocean    1964    7.29\n3 Egegik 2-yr-ocean    1965    8.34\n4 Egegik 2-yr-ocean    1966    5.96\n5 Egegik 2-yr-ocean    1967    6.58\n6 Egegik 2-yr-ocean    1968    6.35\n\n\nGet one time series and split into train and test. Each with 10 years.\n\n\nCode\ndat &lt;- bb_data %&gt;%\n  filter(system == \"Kvichak\", age_group == \"1.3\") %&gt;%\n  mutate(lnreturns = log(ret),\n         year = ret_yr) %&gt;%\n  select(year, lnreturns)\ndatts &lt;- ts(dat$lnreturns, start=dat$year[1])\ntrain &lt;- window(datts, dat$year[1], dat$year[1]+9)\ntest &lt;- window(datts, dat$year[1]+10, dat$year[1]+10+9)",
    "crumbs": [
      "ARIMA models",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Lab Intro</span>"
    ]
  },
  {
    "objectID": "Lab-1/Lab1-ARIMA.html#ruggerone-irvine-salmon-in-the-north-pacific",
    "href": "Lab-1/Lab1-ARIMA.html#ruggerone-irvine-salmon-in-the-north-pacific",
    "title": "2  Lab Intro",
    "section": "Ruggerone & Irvine: Salmon in the North Pacific",
    "text": "Ruggerone & Irvine: Salmon in the North Pacific\nThe data set Data_Images/ruggerone_data.rds has total abundance of natural spawners (not hatchery) from 15 regions in the N Pacific. These are data provided with Ruggerone, G. and Irvine, J. 2018. Numbers and biomass of natural- and hatchery-origin Pink, Chum, and Sockeye Salmon in the North Pacific Ocean, 1925-2015. Marine and Coastal Fisheries: Dynamics, Management, and Ecosystem Science 10. DOI: 10.1002/mcf2.10023. Open Access.\nLoad the data\n\n\nCode\nruggerone_data &lt;- readRDS(here::here(\"Lab-1\", \"Data_Images\", \"ruggerone_data.rds\"))\n\n\n\n\n\nFigure 1. The approximate geographic locations of regional stock groups. Region 1, Washington State, including the Columbia River. Region 2, Southern British Columbia (BC) south of the central coast of British Columbia (~51°N). . Region 3, Northern BC including central and northern British Columbia. Region 4, Southeast Alaska (AK) including the Yakutat coast. The Central Alaska region extends from the Bering River (~60°N), near Prince William Sound in Region 5, westward to Unimak Island (~166°W), thereby including Regions 5 through 8. Western Alaska includes Regions 9 through 12, i.e., all North American drainages flowing into the Bering Sea from Unimak Island to Kotzebue. Data for eastern and western Kamchatka (Regions 14 and 15) are separated from data for the Russian mainland and islands (called “Mainland & Islands” here, which includes the Okhotsk coast, Amur River, Primorye, Sakhalin and Kurile Islands, and relatively small runs to the Anadyr). Region 20, Japan, includes the islands of Hokkaido and Honshu. South Korea (Region 21) not shown.\n\n\n\n\n\n\n\n\n\n\nregion in data file\ndesciption\nregions in map\n\n\n\n\njapan\nJapan & South Korea\n20 and 21\n\n\nm_i\nRussian Mainland & Islands\n13, 16, 17 18, 19\n\n\nw_kam\nWestern Kamchatka\n15\n\n\ne_kam\nEastern Kamchatka\n14\n\n\nwak\nWestern Alaska\n9, 10, 11, 12\n\n\ns_pen\nSouthern Alaska Peninsula\n8\n\n\nkod\nKodiak\n7\n\n\nci\nCook Inlet\n6\n\n\npws\nPrince William Sound\n5\n\n\nseak\nSoutheast Alaska\n4\n\n\nnbc\nNorthern British Columbia\n3\n\n\nsbc\nSouthern British Columbia\n2\n\n\nwa\nWashington State\n1\n\n\nwc\nWest Coast USA\nmislabeled on map\n\n\ncak (not in data file)\nCentral Alaska\n5, 6, 7, 8\n\n\n\n\nRuggerone and Irvine data\n\n\ncolnames:  year region returns species \n\n\nspecies:  pink chum sockeye \n\n\nregions:  ci e_kam japan kod korea m_i nbc pws sbc seak s_pen wa wak w_kam wc \n\n\n\n\nSome plots of the Ruggerone and Irvine data.\n\n\nCode\nruggerone_data %&gt;% \n  filter(species==\"pink\") %&gt;% \n  ggplot(aes(x=year, y=log(returns))) + \n    geom_line() + \n    ggtitle(\"pink salmon log abundance\") +\n    facet_wrap(~region)\n\n\n\n\n\npink salmon by regions\n\n\n\n\n\n\nCode\nruggerone_data %&gt;% \n  group_by(species, year) %&gt;%\n  summarize(total = sum(returns, na.rm=TRUE)) %&gt;%\n  ggplot(aes(x=year, y=log(total))) + \n    geom_line() + \n    ggtitle(\"log abundance by species\") +\n    facet_wrap(~species)\n\n\n\n\n\ntotal by species\n\n\n\n\n\n\nSome subsets of the data\nHere are some subsets of the data that you might want to use.\nLog total North Pacific pink, chum, sockeye\n\n\nCode\nsubdata &lt;- ruggerone_data %&gt;% \n  group_by(species, year) %&gt;%\n  summarize(lntotal = log(sum(returns, na.rm=TRUE)))\nhead(subdata)\n\n\n# A tibble: 6 × 3\n# Groups:   species [1]\n  species  year lntotal\n  &lt;chr&gt;   &lt;dbl&gt;   &lt;dbl&gt;\n1 chum     1952    3.91\n2 chum     1953    3.88\n3 chum     1954    4.20\n4 chum     1955    4.28\n5 chum     1956    4.38\n6 chum     1957    4.08\n\n\nLog North Pacific pink\n\n\nCode\nsubdata &lt;- ruggerone_data %&gt;% \n  filter(species == \"pink\") %&gt;%\n mutate(lnreturns = log(returns))\nhead(subdata)\n\n\n# A tibble: 6 × 5\n   year region returns species lnreturns\n  &lt;dbl&gt; &lt;chr&gt;    &lt;dbl&gt; &lt;chr&gt;       &lt;dbl&gt;\n1  1952 ci       4.36  pink        1.47 \n2  1953 ci       1.30  pink        0.264\n3  1954 ci       4.67  pink        1.54 \n4  1955 ci       2.67  pink        0.981\n5  1956 ci       3.57  pink        1.27 \n6  1957 ci       0.804 pink       -0.218\n\n\nTotal in some bigger areas\n\n\nCode\nsubdata &lt;- ruggerone_data %&gt;% \n  mutate(\n    area = case_match(\n      region, \n      c(\"japan\", \"korea\", \"m_i\", \"e_kam\", \"w_kam\") ~ \"East_Asia\",\n      c(\"wak\", \"s_pen\", \"kod\", \"ci\", \"pws\", \"seak\") ~ \"Alaska\",\n      c(\"nbc\", \"sbc\", \"wa\", \"wc\") ~ \"WC\",\n      .default = region\n    )) %&gt;%\n  group_by(area, species, year) %&gt;%\n  summarize(lntotal = log(sum(returns, na.rm=TRUE)))\nhead(subdata)\n\n\n# A tibble: 6 × 4\n# Groups:   area, species [1]\n  area   species  year lntotal\n  &lt;chr&gt;  &lt;chr&gt;   &lt;dbl&gt;   &lt;dbl&gt;\n1 Alaska chum     1952    2.83\n2 Alaska chum     1953    2.77\n3 Alaska chum     1954    2.92\n4 Alaska chum     1955    2.47\n5 Alaska chum     1956    2.81\n6 Alaska chum     1957    2.89",
    "crumbs": [
      "ARIMA models",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Lab Intro</span>"
    ]
  },
  {
    "objectID": "Lab-1/Lab1-ARIMA.html#example-analysis",
    "href": "Lab-1/Lab1-ARIMA.html#example-analysis",
    "title": "2  Lab Intro",
    "section": "Example analysis",
    "text": "Example analysis\nGet one time series out of ruggerone_data\n\n\nCode\ndat &lt;- ruggerone_data %&gt;%\n  filter(region == \"wak\", species == \"pink\") %&gt;%\n  mutate(lnreturns = log(returns)) %&gt;%\n  select(year, lnreturns)\nhead(dat)\n\n\n# A tibble: 6 × 2\n   year lnreturns\n  &lt;dbl&gt;     &lt;dbl&gt;\n1  1952      1.40\n2  1953     -1.24\n3  1954      1.40\n4  1955     -1.24\n5  1956      1.40\n6  1957     -1.24\n\n\nMake a time series object and divide into train and test data.\n\n\nCode\ndatts &lt;- ts(dat$lnreturns, start=dat$year[1])\ntrain &lt;- window(datts, 1952, 1971)\ntest &lt;- window(datts, 1972, 2001)\n\n\nFit a model with auto.arima() in the forecast package.\n\n\nCode\nlibrary(forecast)\nmod &lt;- auto.arima(train)\nmod\n\n\nSeries: train \nARIMA(1,0,0) with zero mean \n\nCoefficients:\n          ar1\n      -0.9293\ns.e.   0.0725\n\nsigma^2 = 0.3815:  log likelihood = -19.22\nAIC=42.45   AICc=43.15   BIC=44.44\n\n\nPlot a 30-year forecast against the test data.\n\n\nCode\nlibrary(zoo)\n\n\n\nAttaching package: 'zoo'\n\n\nThe following objects are masked from 'package:base':\n\n    as.Date, as.Date.numeric\n\n\nCode\nfr &lt;- forecast(mod, h=30)\nautoplot(fr) + geom_point(aes(x=x, y=y), data=fortify(test))",
    "crumbs": [
      "ARIMA models",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Lab Intro</span>"
    ]
  },
  {
    "objectID": "Lab-2/Lab2-MARSS.html",
    "href": "Lab-2/Lab2-MARSS.html",
    "title": "3  Lab Intro",
    "section": "",
    "text": "Teams\nFor this lab you will use multivariate auto-regressive state-space (MARSS) to analyze multivariate salmon data from the Columbia River. These data are noisy and gappy. They are estimates of total spawner abundance and might include hatchery spawners.",
    "crumbs": [
      "MARSS Models",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Lab Intro</span>"
    ]
  },
  {
    "objectID": "Lab-2/Lab2-MARSS.html#teams",
    "href": "Lab-2/Lab2-MARSS.html#teams",
    "title": "3  Lab Intro",
    "section": "",
    "text": "Lower Columbia River Chinook:\nLower Columbia River Steelhead:\nLower Columbia River Coho:\nMiddle Columbia River Steelhead:",
    "crumbs": [
      "MARSS Models",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Lab Intro</span>"
    ]
  },
  {
    "objectID": "Lab-2/Lab2-MARSS.html#lower-columbia-river-salmon-spawner-data",
    "href": "Lab-2/Lab2-MARSS.html#lower-columbia-river-salmon-spawner-data",
    "title": "3  Lab Intro",
    "section": "Lower Columbia River salmon spawner data",
    "text": "Lower Columbia River salmon spawner data\nThese data are from the Coordinated Assessments Partnership (CAP) and downloaded using the rCAX R client for the CAX (the CAP database) API. The data are saved in Lab-2/Data_Images/columbia-river.rda.\n\n\nCode\nload(here::here(\"Lab-2\", \"Data_Images\", \"columbia-river.rda\"))\n\n\nThe data set has data for fi endangered and threatened ESU (Evolutionary Significant Units) in the Lower Columbia River.\n\n\nCode\nesu &lt;- unique(columbia.river$esu_dps)\nesu\n\n\n[1] \"Steelhead (Middle Columbia River DPS)\"     \n[2] \"Steelhead (Upper Columbia River DPS)\"      \n[3] \"Steelhead (Lower Columbia River DPS)\"      \n[4] \"Salmon, coho (Lower Columbia River ESU)\"   \n[5] \"Salmon, Chinook (Lower Columbia River ESU)\"\n\n\n\n\n\n\n\nFigure from ESA recovery plan for Lower Columbia River Coho salmon, Lower Columbia River Chinook salmon, Columbia River Chum salmon, and Lower Columbia River steelhead. 2013. NMFS NW Region. https://repository.library.noaa.gov/view/noaa/16002\n\n\n\n\n\nData structure\nThe dataset has the following columns\n\n\nCode\ncolnames(columbia.river)\n\n\n[1] \"species\"       \"esu_dps\"       \"majorpopgroup\" \"esapopname\"   \n[5] \"commonpopname\" \"run\"           \"spawningyear\"  \"value\"        \n[9] \"value_type\"   \n\n\n\nspecies: Chinook, Coho, Steelhead\nesu_dps: name of the ESU\nmajorpopgroup: biological major group\ncommonpopname: common population name, generally a stream or river\nrun: run-timing\nspawningyear: the year that the spawners were counted on the spawning grounds\nvalue: total (natural-born and hatchery-born) spawners on the spawning ground. Generally some type of redd-count expansion or some other stream count of spawners. Redd = a gravel nest.\n\n\n\nData plots\nLet’s load one ESU and make a plot. Create a function.\n\n\nCode\nplotesu &lt;- function(esuname){\n  df &lt;- columbia.river %&gt;% subset(esu_dps %in% esuname)\nggplot(df, aes(x=spawningyear, y=log(value), color=majorpopgroup)) + \n  geom_point(size=0.2, na.rm = TRUE) + \n  theme(strip.text.x = element_text(size = 3)) +\n  theme(axis.text.x = element_text(size = 5, angle = 90)) +\n  facet_wrap(~esapopname) +\n  ggtitle(paste0(esuname, collapse=\"\\n\"))\n}\n\n\n\n\nCode\nplotesu(esu[3])\n\n\n\n\n\n\n\n\n\n\n\nCode\nplotesu(esu[4])\n\n\n\n\n\n\n\n\n\n\n\nCode\nplotesu(esu[5])\n\n\n\n\n\n\n\n\n\n\n\nCode\nplotesu(esu[1])\n\n\n\n\n\n\n\n\n\n\n\nCode\ndf &lt;- columbia.river %&gt;% subset(species == \"Chinook salmon\")\nggplot(df, aes(x=spawningyear, y=log(value), color=run)) + \n  geom_point(size=0.2, na.rm = TRUE) +\n  theme(strip.text.x = element_text(size = 3)) +\n  theme(axis.text.x = element_text(size = 5, angle = 90)) + \n  facet_wrap(~esapopname)",
    "crumbs": [
      "MARSS Models",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Lab Intro</span>"
    ]
  },
  {
    "objectID": "Lab-2/Lab2-MARSS.html#tasks-for-each-group",
    "href": "Lab-2/Lab2-MARSS.html#tasks-for-each-group",
    "title": "3  Lab Intro",
    "section": "Tasks for each group",
    "text": "Tasks for each group\n\nCreate estimates of spawner abundance for all missing years and provide estimates of the decline from the historical abundance.\nEvaluate support for the major population groups. Are the populations in the groups more correlated than outside the groups?\nEvaluate the evidence of cycling in the data. We will talk about how to do this on the Tuesday after lab.\n\n\nTips\nSimplify\nIf your ESU has many populations, start with a smaller set of 4-7 populations.\nAssumptions\nYou can assume that R=\"diagonal and equal\" and A=\"scaling\". Assume that “historical” means the earliest years available for your group.\nStates\nYour abundance estimate is the “x” or “state” estimates. You can get this from\nfit$states\nor\ntsSmooth(fit)\nwhere fit is from fit &lt;- MARSS()\nplotting\nEstimate of the mean of the spawner counts based on your x model.\nautoplot(fit, plot.type=\"fitted.ytT\")\ndiagnostics\nautoplot(fit, plot.type=\"residuals\")\n\n\nAddress the following in your methods\n\nDescribe your assumptions about the x and how the data time series are related to x.\n\nHow are the x and y (data) related? 1 x for 1 y or will you assume 1 x for all y or 1 x for each major population group? How will you choose?\nWhat will you assume about the U for the x’s?\nWhat will you assume about the Q matrix?\n\nWrite out your assumptions as different models in matrix form, fit each and then compare these with AIC or AICc.\nDo your estimates differ depending on the assumptions you make about the structure of the data, i.e. you assumptions about the x’s, Q, and U.",
    "crumbs": [
      "MARSS Models",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Lab Intro</span>"
    ]
  },
  {
    "objectID": "Lab-2/Lab2-MARSS.html#sample-code",
    "href": "Lab-2/Lab2-MARSS.html#sample-code",
    "title": "3  Lab Intro",
    "section": "Sample code",
    "text": "Sample code\nHere I show how I might analyze the Upper Columbia Steelhead data.\n\n\n\n\n\nFigure from 2022 5-Year Review: Summary & Evaluation of Upper Columbia River Spring-run Chinook Salmon and Upper Columbia River Steelhead. NMFS. West Coast Region. https://doi.org/10.25923/p4w5-dp31\n\n\n\n\nSet up the data. We need the time series in a matrix with time across the columns.\nLoad the data.\n\n\nCode\nload(here::here(\"Lab-2\", \"Data_Images\", \"columbia-river.rda\"))\n\n\nWrangle the data.\n\n\nCode\nlibrary(dplyr)\nesuname &lt;- esu[2]\n\ndat &lt;- columbia.river %&gt;% \n  subset(esu_dps == esuname) %&gt;% # get only this ESU\n  mutate(log.spawner = log(value)) %&gt;% # create a column called log.spawner\n  select(esapopname, spawningyear, log.spawner) %&gt;% # get just the columns that I need\n  pivot_wider(names_from = \"esapopname\", values_from = \"log.spawner\") %&gt;% \n  column_to_rownames(var = \"spawningyear\") %&gt;% # make the years rownames\n  as.matrix() %&gt;% # turn into a matrix with year down the rows\n  t() # make time across the columns\n# MARSS complains if I don't do this\ndat[is.na(dat)] &lt;- NA\n\n\nClean up the row names\n\n\nCode\ntmp &lt;- rownames(dat)\ntmp &lt;- stringr::str_replace(tmp, \"Steelhead [(]Upper Columbia River DPS[)]\", \"\")\ntmp &lt;- stringr::str_replace(tmp, \"River - summer\", \"\")\ntmp &lt;- stringr::str_trim(tmp)\nrownames(dat) &lt;- tmp\n\n\nSpecify a model\n\n\nCode\nmod.list1 &lt;- list(\n  U = \"unequal\",\n  R = \"diagonal and equal\",\n  Q = \"unconstrained\"\n)\n\n\nFit the model. In this case, a BFGS algorithm is faster.\n\n\nCode\nlibrary(MARSS)\nfit1 &lt;- MARSS(dat, model=mod.list1, method=\"BFGS\")\n\n\nSuccess! Converged in 76 iterations.\nFunction MARSSkfas used for likelihood calculation.\n\nMARSS fit is\nEstimation method: BFGS \nEstimation converged in 76 iterations. \nLog-likelihood: -109.4078 \nAIC: 256.8155   AICc: 262.1676   \n \n               Estimate\nR.diag          0.00997\nU.X.Entiat      0.02182\nU.X.Methow      0.01852\nU.X.Okanogan    0.00140\nU.X.Wenatchee  -0.02222\nQ.(1,1)         0.28016\nQ.(2,1)         0.12303\nQ.(3,1)         0.14275\nQ.(4,1)         0.23415\nQ.(2,2)         0.31642\nQ.(3,2)         0.30806\nQ.(4,2)         0.19061\nQ.(3,3)         0.31031\nQ.(4,3)         0.18852\nQ.(4,4)         0.52813\nx0.X.Entiat     4.61647\nx0.X.Methow     6.43401\nx0.X.Okanogan   6.47217\nx0.X.Wenatchee  8.04868\nInitial states (x0) defined at t=0\n\nStandard errors have not been calculated. \nUse MARSSparamCIs to compute CIs and bias estimates.\n\n\nHmmmmm, the Q variance is so high that it perfectly fits the data. That doesn’t seem right.\n\n\nCode\nautoplot(fit1, plot.type=\"fitted.ytT\")\n\n\nMARSSresiduals.tT reported warnings. See msg element or attribute of returned residuals object.\n\n\n\n\n\n\n\n\n\nLet’s look at the corrplot. Interesting. The Methow and Entiat are almost perfectly correlated while the Entiat and Wenatchee are somewhat correlated. That makes sense if you look at a map.\n\n\nCode\nlibrary(corrplot)\n\n\ncorrplot 0.95 loaded\n\n\nCode\nQ &lt;- coef(fit1, type=\"matrix\")$Q\ncorrmat &lt;- diag(1/sqrt(diag(Q))) %*% Q %*% diag(1/sqrt(diag(Q)))\ncorrplot(corrmat)\n\n\n\n\n\n\n\n\n\nI need to use the EM algorithm (remove method=\"BFGS\") because the BFGS algorithm doesn’t allow constraints on the Q matrix.\n\n\nCode\nmod.list2 &lt;- list(\n  U = \"unequal\",\n  R = \"diagonal and equal\",\n  Q = \"equalvarcov\"\n)\nfit2 &lt;- MARSS(dat, model=mod.list2, control = list(maxit=1000))\n\n\nSuccess! abstol and log-log tests passed at 794 iterations.\nAlert: conv.test.slope.tol is 0.5.\nTest with smaller values (&lt;0.1) to ensure convergence.\n\nMARSS fit is\nEstimation method: kem \nConvergence test: conv.test.slope.tol = 0.5, abstol = 0.001\nEstimation converged in 794 iterations. \nLog-likelihood: -120.6028 \nAIC: 263.2057   AICc: 264.9657   \n \n               Estimate\nR.diag           0.1290\nU.X.Entiat       0.0257\nU.X.Methow       0.0311\nU.X.Okanogan     0.0166\nU.X.Wenatchee   -0.0282\nQ.diag           0.2632\nQ.offdiag        0.2631\nx0.X.Entiat      4.2026\nx0.X.Methow      5.9042\nx0.X.Okanogan    5.8359\nx0.X.Wenatchee   8.0703\nInitial states (x0) defined at t=0\n\nStandard errors have not been calculated. \nUse MARSSparamCIs to compute CIs and bias estimates.\n\n\n\n\nCode\nautoplot(fit2, plot.type=\"fitted.ytT\")\n\n\nMARSSresiduals.tT reported warnings. See msg element or attribute of returned residuals object.\n\n\n\n\n\n\n\n\n\nNow I want try something different. I will treat the Methow-Okanogan as one state and the Entiat-Wenatchee as another. I’ll let these be correlated together. Interesting, these two are estimated to be perfectly correlated.\n\n\nCode\nmod.list3 &lt;- mod.list1\nmod.list3$Q &lt;- \"unconstrained\"\nmod.list3$Z &lt;- factor(c(\"ew\", \"mo\", \"mo\", \"ew\"))\nfit3 &lt;- MARSS(dat, model = mod.list3)\n\n\nWarning! Reached maxit before parameters converged. Maxit was 500.\n neither abstol nor log-log convergence tests were passed.\n\nMARSS fit is\nEstimation method: kem \nConvergence test: conv.test.slope.tol = 0.5, abstol = 0.001\nWARNING: maxit reached at  500  iter before convergence.\n Neither abstol nor log-log convergence test were passed.\n The likelihood and params are not at the MLE values.\n Try setting control$maxit higher.\nLog-likelihood: -137.532 \nAIC: 295.064   AICc: 296.5209   \n \n            Estimate\nA.Okanogan  -0.68779\nA.Wenatchee  1.54127\nR.diag       0.18062\nU.ew        -0.02175\nU.mo         0.00374\nQ.(1,1)      0.22050\nQ.(2,1)      0.22103\nQ.(2,2)      0.22164\nx0.ew        6.51468\nx0.mo        7.33795\nInitial states (x0) defined at t=0\n\nStandard errors have not been calculated. \nUse MARSSparamCIs to compute CIs and bias estimates.\n\nConvergence warnings\n Warning: the  logLik  parameter value has not converged.\n Type MARSSinfo(\"convergence\") for more info on this warning.\n\n\nCode\nautoplot(fit3, plot.type=\"fitted.ytT\")\n\n\n\n\n\n\n\n\n\nFinally, let’s look at the AIC values. Fit1 was very flexible and can put a line through the data so I know I have at least one model in the set that can fit the data. Well, the most flexible model is the best. At this point, I’d like to look just at data after 1980 or so. I don’t like the big dip that happened in the Wenatchee River. I’d want to talk to the biologists to find out what happened, especially because I know that there might be hatchery releases in this system.\n\n\nCode\naic &lt;- c(fit1$AICc, fit2$AICc, fit3$AICc)\naic-min(aic)\n\n\n[1]  0.00000  2.79807 34.35331\n\n\n\nIncluding cycling\nLet’s just look at the data after 1987 to eliminate that string of NAs in the 3 rivers.\n\n\nCode\ndat87 &lt;- dat[,colnames(dat)&gt;1987]\n\n\nLet’s look the acf to look for evidence of cycling. Due to the nature of their life-cycle where they tend to return back to their spawning grounds after a certain numbers of years, we might expect some cycling although steelhead aren’t really known for this (unlike sockeye, chinook and pink).\nWell no obvious cycles.\n\n\nCode\npar(mfrow=c(2,2))\nfor(i in 1:4){\n  acf(dat87[i,], na.action=na.pass, main=rownames(dat87)[i])\n}\n\n\n\n\n\n\n\n\n\nBut let’s go through how we might include cycles. We are going to include cycles with frequency 3, 4, and 5, choosem to reflect steelhead returning after 3, 4 or 5 years.\n\n\nCode\nTT &lt;- dim(dat87)[2] #number of time steps\ncovariates &lt;- rbind(\n  forecast::fourier(ts(1:TT, freq=3), K=1) |&gt; t(),\n  forecast::fourier(ts(1:TT, freq=4), K=1) |&gt; t(),\n  forecast::fourier(ts(1:TT, freq=5), K=1) |&gt; t()\n)\n\n\nRegistered S3 method overwritten by 'quantmod':\n  method            from\n  as.zoo.data.frame zoo \n\n\nNow let’s fit a model with these covariates. Let’s analyze the populations separately, so Q is diagonal.\n\n\nCode\nmod.list4 &lt;- list(\n  Q = \"unconstrained\",\n  U = \"unequal\",\n  R = \"diagonal and equal\",\n  D = \"unconstrained\",\n  d = covariates\n)\n\n\n\n\nCode\nfit4.87 &lt;- MARSS(dat87, model=mod.list4)\n\n\nSuccess! abstol and log-log tests passed at 78 iterations.\nAlert: conv.test.slope.tol is 0.5.\nTest with smaller values (&lt;0.1) to ensure convergence.\n\nMARSS fit is\nEstimation method: kem \nConvergence test: conv.test.slope.tol = 0.5, abstol = 0.001\nEstimation converged in 78 iterations. \nLog-likelihood: -55.48472 \nAIC: 196.9694   AICc: 238.5519   \n \n                   Estimate\nR.diag              0.00841\nU.X.Entiat         -0.01592\nU.X.Methow          0.00629\nU.X.Okanogan       -0.01331\nU.X.Wenatchee      -0.06327\nQ.(1,1)             0.21426\nQ.(2,1)             0.10446\nQ.(3,1)             0.12493\nQ.(4,1)             0.12760\nQ.(2,2)             0.21888\nQ.(3,2)             0.21364\nQ.(4,2)             0.13562\nQ.(3,3)             0.22037\nQ.(4,3)             0.13483\nQ.(4,4)             0.31566\nx0.X.Entiat         6.34777\nx0.X.Methow         7.39581\nx0.X.Okanogan       7.02470\nx0.X.Wenatchee      8.65239\nD.(Entiat,S1-3)    -0.03464\nD.(Methow,S1-3)    -0.12969\nD.(Okanogan,S1-3)  -0.11592\nD.(Wenatchee,S1-3) -0.01482\nD.(Entiat,C1-3)     0.02784\nD.(Methow,C1-3)    -0.08604\nD.(Okanogan,C1-3)  -0.09585\nD.(Wenatchee,C1-3)  0.05808\nD.(Entiat,S1-4)    -0.11286\nD.(Methow,S1-4)    -0.13983\nD.(Okanogan,S1-4)  -0.09480\nD.(Wenatchee,S1-4) -0.06365\nD.(Entiat,C1-4)     0.02030\nD.(Methow,C1-4)    -0.09692\nD.(Okanogan,C1-4)  -0.08208\nD.(Wenatchee,C1-4) -0.08237\nD.(Entiat,S1-5)    -0.19272\nD.(Methow,S1-5)     0.05745\nD.(Okanogan,S1-5)   0.07723\nD.(Wenatchee,S1-5) -0.18255\nD.(Entiat,C1-5)    -0.01818\nD.(Methow,C1-5)     0.17916\nD.(Okanogan,C1-5)   0.15510\nD.(Wenatchee,C1-5) -0.02965\nInitial states (x0) defined at t=0\n\nStandard errors have not been calculated. \nUse MARSSparamCIs to compute CIs and bias estimates.\n\n\nLet’s plot the estimates. broom::tidy() will get a data frame with the terms, estimates and CIs.\n\n\nCode\nlibrary(broom)\n# get all the parameter estimates for D\ndf &lt;- tidy(fit4.87) %&gt;%\n  subset(stringr::str_sub(term,1,1)==\"D\")\n# add a column with the river names\ndf$river &lt;- as.factor(rep(rownames(dat87),nrow(covariates)))\n# add a column for the lag or frequency\nlags &lt;- stringr::str_split(rownames(covariates), \"-\") %&gt;% lapply(function(x){x[[2]]}) %&gt;% unlist()\ndf$lag &lt;- rep(lags, each=nrow(dat87))\n# add column for the type of fourier\ndf$type &lt;- rep(rownames(covariates), each=nrow(dat87))\n\n\nWe can then plot this. Interesting. Some support for 5 year cycles.\n\n\nCode\nggplot(df, aes(x=type, y=estimate, col=lag)) + \n  geom_point() +\n  geom_errorbar(aes(ymin=conf.low, ymax=conf.up), width=.2, position=position_dodge(.9)) +\n  geom_hline(yintercept = 0) +\n  facet_wrap(~river) +\n  ggtitle(\"The cycle estimates with CIs\")\n\n\n\n\n\n\n\n\n\nLet’s compare some other models.\n\n\nCode\n# No cycles\nmod.list &lt;- list(\n  Q = \"unconstrained\",\n  U = \"unequal\",\n  R = \"diagonal and equal\"\n)\nfit1.87 &lt;- MARSS(dat87, model=mod.list, silent=TRUE)\n# Only lag 5 cycles\nmod.list &lt;- list(\n  Q = \"unconstrained\",\n  U = \"unequal\",\n  R = \"diagonal and equal\",\n  D = \"unconstrained\",\n  d = covariates[5:6,]\n)\nfit5.87 &lt;- MARSS(dat87, model=mod.list, silent=TRUE)\n# Cycles in the process\n# which doesn't really make sense for salmon since the cycles are age-structure cycles \n# which act like cycles in the observations\nmod.list &lt;- list(\n  Q = \"unconstrained\",\n  U = \"unequal\",\n  R = \"diagonal and equal\",\n  C = \"unconstrained\",\n  c = covariates\n)\nfit6.87 &lt;- MARSS(dat87, model=mod.list, silent=TRUE)\n\n\nHmm model without cyles is much better (lower AICc). Even if we only have the 5 year cycles (covariates[5:6,]), the AICc is larger than for the models with cycles.\n\n\nCode\naic &lt;- c(fit1.87$AICc, fit4.87$AICc, fit5.87$AICc, fit6.87$AICc)\naic-min(aic)\n\n\n[1]  0.00000 56.99612 11.66091 56.99461",
    "crumbs": [
      "MARSS Models",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Lab Intro</span>"
    ]
  },
  {
    "objectID": "Lab-2/Lab2-MARSS.html#resources",
    "href": "Lab-2/Lab2-MARSS.html#resources",
    "title": "3  Lab Intro",
    "section": "Resources",
    "text": "Resources\nChapter 7 MARSS models. ATSA Lab Book. https://atsa-es.github.io/atsa-labs/chap-mss.html\nChapter 8 MARSS models with covariate. ATSA Lab Book. https://atsa-es.github.io/atsa-labs/chap-msscov.html\nChapter 16 Modeling cyclic sockeye https://atsa-es.github.io/atsa-labs/chap-cyclic-sockeye.html",
    "crumbs": [
      "MARSS Models",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Lab Intro</span>"
    ]
  },
  {
    "objectID": "Lab-3/Lab-3-DFA.html",
    "href": "Lab-3/Lab-3-DFA.html",
    "title": "4  Lab Intro",
    "section": "",
    "text": "Background\nFor this lab you will use dynamic factor analysis (DFA) to examine common temporal patterns in multivariate plankton data from Lake Washington. These data are a bit noisy and gappy, so you will need to make some choices about which species and time period(s) to examine.",
    "crumbs": [
      "Dynamic Factor Analysis",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Lab Intro</span>"
    ]
  },
  {
    "objectID": "Lab-3/Lab-3-DFA.html#teams",
    "href": "Lab-3/Lab-3-DFA.html#teams",
    "title": "4  Lab Intro",
    "section": "Teams",
    "text": "Teams",
    "crumbs": [
      "Dynamic Factor Analysis",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Lab Intro</span>"
    ]
  },
  {
    "objectID": "Lab-3/Lab-3-DFA.html#lake-washington-data",
    "href": "Lab-3/Lab-3-DFA.html#lake-washington-data",
    "title": "4  Lab Intro",
    "section": "Lake Washington data",
    "text": "Lake Washington data\nFor reference, here are the columns in the Lake Washington data set:\n\nIndices\n\nYear: year\n\nMonth: month as an integer\n\n\n\nEnvironmental data\n\nTemp: water temperature in degrees C\n\nTP: total phosphorous concentration in mg m-3\n\npH: pH.\n\n\n\nPhytoplankton\n\nCryptomonas: small brown or green algae (edible)\n\nDiatoms: small algae rich in silica (edible)\n\nGreens: general class of algae (edible)\n\nBluegreens: cyanobacteria that can fix nitrogen (inedible)\n\nUnicells: very small algae (edible)\n\nOther.algae: generic catch-all for atypical species (edible)\n\n\n\nZooplankton\n\nConochilus: colonial form of rotifer (grazer)\n\nCyclops: cyclopoid copepod (grazer)\n\nDaphnia: cladoceran (grazer)\n\nDiaptomus: calanoid copepod (grazer)\n\nEpischura: very large calanoid copepod (predator)\n\nLeptodora: very large cladoceran (predator)\n\nNeomysis: opossum shrimp (predator)\n\nNon.daphnid.cladocerans: catch-all for other cladocerans (grazers)\nNon.colonial.rotifers: free-floating rotifers (grazers)",
    "crumbs": [
      "Dynamic Factor Analysis",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Lab Intro</span>"
    ]
  },
  {
    "objectID": "Lab-3/Lab-3-DFA.html#resources",
    "href": "Lab-3/Lab-3-DFA.html#resources",
    "title": "4  Lab Intro",
    "section": "Resources",
    "text": "Resources\nLab materials from April 20 [online here]\nChapter 10 Dynamic Factor Analysis. ATSA Lab Book. [online here]",
    "crumbs": [
      "Dynamic Factor Analysis",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Lab Intro</span>"
    ]
  },
  {
    "objectID": "Lab-4/Lab-4-HMM.html",
    "href": "Lab-4/Lab-4-HMM.html",
    "title": "5  Lab Intro",
    "section": "",
    "text": "Part 1. Hidden Markov Models\nIdentifying regimes using Hidden Markov Models (HMMs)\nFor the first part of the homework, we’ll use data from the Pacific Decadal Oscillation (PDO) to ask questions about identifying regimes. This dataset can be accessed via the rsoi package. First, let’s grab the data. Run the install.packages() code if you need the rsoi package.\n\n\nCode\nlibrary(dplyr)\nlibrary(rsoi)\n#install.packages(\"rsoi\")\npdo &lt;- rsoi::download_pdo()\n\n\nWe will look at the winter PDO only. We need to shift the year for Oct-Dec by 1 since Oct-Feb spans 2 calendar years.\n\n\nCode\npdo$Year[which(pdo$Month%in%c(\"Oct\",\"Nov\",\"Dec\"))] &lt;- pdo$Year[which(pdo$Month%in%c(\"Oct\",\"Nov\",\"Dec\"))] + 1\npdo &lt;- dplyr::group_by(pdo, Year) %&gt;%\n  dplyr::summarize(winter_pdo = mean(PDO[which(Month %in% c(\"Oct\",\"Nov\",\"Dec\",\"Jan\",\"Feb\"))])) %&gt;% \n  dplyr::select(winter_pdo, Year)\n# The first year will be missing Oct-Dec\npdo &lt;- pdo[-1,]\n\n\nUse pdo for your analyses. You will be modeling winter_pdo. Use the hmmTMB or depmixS4 packages discussed in the HMM lecture.\n\nFit a 2-state HMM to the annual indices of winter PDO. Assume Gaussian errors (default). See the lecture on HMMs and/or section 3 in the depmixS4 vignette.\nTry fitting the model 10-20 times. Does the likelihood seem reasonably stable? (Note logLik() in depmixS4 gets you the log-likelihood from model fits in R).\nWhat is the transition matrix for the best model? What are the persistence probabilities (e.g. probabilities of staying in the same state from step \\(t\\) to \\(t+1\\))?\nPlot the predicted values versus year. See slide 50 of the HMM lecture for an example.\nPlot the posterior probability of being in the various states from your best model (e.g. probability of being in state 1 over time)\nWhat is the long-run probability that the PDO is in state 1 versus state 2? You can calculate this from the transition matrix. There is an analytical solution for this (a bit of googling will find it). Or you can run a for loop to find it. Let \\(p_1\\) be the probability that PDO is in state 1 and \\(p_2\\) be the probability that PDO is in state 2. Note \\(p_1 + p_2 = 1\\). If \\(P\\) is the transition matrix (in Q3),\n\n\\[\\begin{bmatrix}p_1&p_2\\end{bmatrix}_n = \\begin{bmatrix}p_1&p_2\\end{bmatrix}_{n-1} P\\] Note this is a 1x2 matrix times a 2x2 matrix on the right. Start with \\(p_1=1\\) and \\(p_2=0\\), say. Run a for loop until\n\\[\\begin{bmatrix}p_1&p_2\\end{bmatrix}_n \\approx \\begin{bmatrix}p_1&p_2\\end{bmatrix}_{n-1}\\] That \\(\\begin{bmatrix}p_1&p_2\\end{bmatrix}_n\\) is the long-run probability in each state.\nSome ideas for optional extra analyses\n\nUsing slide 15 of the HMM lecture as a template and the matrix in Q3, write out your fitted HMM model as equations\nChange the model to a 3-state model. Using AIC as a model selection metric, does the 3-state model perform better (lower AIC) compared to the 2-state model? What about a 1-state model?\nIf you include time varying parameters (e.g. year) in the means of each state, or state transition probabilities, does the model do any better?\nRun diagnostics on the best model. Any problems?\nCompare the transition matrices for fits with different random starting conditions. Are the transition matrices stable?\n\n\n\nPart 2. Fitting Multivariate HMMs\nAs part of the California Current Integrated Ecosystem Report, NOAA scientists do annual updates of stoplight charts for ecosystem indicators.\nWe have included the stoplight.csv dataset for this week. One of the columns divides indicators into groups (e.g. Local Physical, Local Biological, etc). Please pick a type of indicators, and develop a 2- or 3-state multivariate HMM. A few tips:\n\nAssume all responses are Gaussian.\nYou’re welcome to include covariates (year? Climate variables?) – but fitting a simple model without covariates is also totally fine\n\nSummarize the model you’ve created. Specifically,\n\nDoes it converge?\nHow many states seem to be most supported?\nWhat are the transition probabilities?\nAnything else interesting that you’ve discovered?",
    "crumbs": [
      "Hidden Markov Models",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Lab Intro</span>"
    ]
  },
  {
    "objectID": "Lab-5/Lab-5-DLM.html",
    "href": "Lab-5/Lab-5-DLM.html",
    "title": "6  Lab 5 - Dynamic Linear Models",
    "section": "",
    "text": "Teams",
    "crumbs": [
      "Dynamic Linear Models",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Lab 5 - Dynamic Linear Models</span>"
    ]
  },
  {
    "objectID": "Lab-5/Lab-5-DLM.html#teams",
    "href": "Lab-5/Lab-5-DLM.html#teams",
    "title": "6  Lab 5 - Dynamic Linear Models",
    "section": "",
    "text": "Liz Elmstrom (SAFS), Dylan Hubl (SEFS), Maria Kuruvilla (QERM)\nTerrance Wang (SAFS), Zoe Rand (QERM)\nEric French (CEE), Madison Shipley (SAFS), Karl Veggerby (SAFS)\nNick Chambers (SAFS), Emma Timmins-Schiffman (Genome Sci), Miranda Mudge (Molecular & Cellular)",
    "crumbs": [
      "Dynamic Linear Models",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Lab 5 - Dynamic Linear Models</span>"
    ]
  },
  {
    "objectID": "Lab-5/Lab-5-DLM.html#sec-dlm-homework",
    "href": "Lab-5/Lab-5-DLM.html#sec-dlm-homework",
    "title": "6  Lab 5 - Dynamic Linear Models",
    "section": "Background",
    "text": "Background\nFor the lab this week we will use DLM’s to examine some of the time-varying properties of the spawner-recruit relationship for Pacific salmon. Much work has been done on this topic, particularly by Randall Peterman and his students and post-docs at Simon Fraser University. To do so, researchers commonly use a Ricker model because of its relatively simple form, such that the number of recruits (offspring) born in year \\(t\\) (\\(R_t\\)) from the number of spawners (parents) (\\(S_t\\)) is\n\\[\\begin{equation}\nR_t = a S_t e^{-b S + v_t}.\n\\end{equation}\\]\nThe parameter \\(a\\) determines the maximum reproductive rate in the absence of any density-dependent effects (the slope of the curve at the origin), \\(b\\) is the strength of density dependence, and \\(v_t \\sim N(0,\\sigma)\\). In practice, the model is typically log-transformed so as to make it linear with respect to the predictor variable \\(S_t\\), such that\n\\[\\begin{align}\n\\text{log}(R_t) &= \\text{log}(a) + \\text{log}(S_t) -b S_t + v_t \\\\\n\\text{log}(R_t) - \\text{log}(S_t) &= \\text{log}(a) -b S_t + v_t \\\\\n\\text{log}(R_t/S_t) &= \\text{log}(a) - b S_t + v_t.\n\\end{align}\\]\nSubstituting \\(y_t = \\text{log}(R_t/S_t)\\), \\(x_t = S_t\\), and \\(\\alpha = \\text{log}(a)\\) yields a simple linear regression model with intercept \\(\\alpha\\) and slope \\(b\\).\nUnfortunately, however, residuals from this simple model typically show high-autocorrelation due to common environmental conditions that affect overlapping generations. Therefore, to correct for this and allow for an index of stock productivity that controls for any density-dependent effects, the model may be re-written as\n\\[\\begin{align}\n\\text{log}(R_t/S_t) &= \\alpha_t - b S_t + v_t, \\\\\n\\alpha_t &= \\alpha_{t-1} + w_t,\n\\end{align}\\]\nand \\(w_t \\sim N(0,q)\\). By treating the brood-year specific productivity as a random walk, we allow it to vary, but in an autocorrelated manner so that consecutive years are not independent from one another.\nMore recently, interest has grown in using covariates (\\(e.g.\\), sea-surface temperature) to explain the interannual variability in productivity. In that case, we can can write the model as\n\\[\\begin{equation}\n\\text{log}(R_t/S_t) = \\alpha + \\delta_t X_t - b S_t + v_t.\n\\end{equation}\\]\nIn this case we are estimating some base-level productivity (\\(\\alpha\\)) plus the time-varying effect of some covariate \\(X_t\\) (\\(\\delta_t\\)).\n\nSpawner-recruit data\nThe data come from a large public database begun by Ransom Myers many years ago. If you are interested, you can find lots of time series of spawning-stock, recruitment, and harvest for a variety of fishes around the globe. The website is here.\nFor this exercise, we will use spawner-recruit data for sockeye salmon (Oncorhynchus nerka) from the Kvichak River in SW Alaska that span the years 1952-1989. In addition, we’ll examine the potential effects of the Pacific Decadal Oscillation (PDO) during the salmon’s first year in the ocean, which is widely believed to be a “bottleneck” to survival.\n\n\n\n\n\n\n\n\n\nThese data are in the atsalibrary package on GitHub. If needed, install using the devtools package.\n\n\nCode\n## library(devtools)\n## Windows users will likely need to set this\n## Sys.setenv(\"R_REMOTES_NO_ERRORS_FROM_WARNINGS\" = \"true\")\ndevtools::install_github(\"nwfsc-timeseries/atsalibrary\")\n\n\nLoad the data.\n\n\nCode\ndata(KvichakSockeye, package=\"atsalibrary\")\nSR_data &lt;- KvichakSockeye\n\n\nThe data are a dataframe with columns for brood year (brood_year), number of spawners (spawners), number of recruits (recruits) and PDO at year \\(t-2\\) in summer (pdo_summer_t2) and in winter (pdo_winter_t2).\n\n\nCode\n## head of data file\nhead(SR_data)\n\n\n  brood_year spawners recruits pdo_summer_t2 pdo_winter_t2\n1       1952       NA    20200         -2.79         -1.68\n2       1953       NA      593         -1.20         -1.05\n3       1954       NA      799         -1.85         -1.25\n4       1955       NA     1500         -0.60         -0.68\n5       1956     9440    39000         -0.50         -0.31\n6       1957     2840     4090         -2.36         -1.78",
    "crumbs": [
      "Dynamic Linear Models",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Lab 5 - Dynamic Linear Models</span>"
    ]
  },
  {
    "objectID": "Lab-5/Lab-5-DLM.html#resources",
    "href": "Lab-5/Lab-5-DLM.html#resources",
    "title": "6  Lab 5 - Dynamic Linear Models",
    "section": "Resources",
    "text": "Resources\nLab materials from April 20 [online here]\nChapter 10 Dynamic Factor Analysis. ATSA Lab Book. [online here]",
    "crumbs": [
      "Dynamic Linear Models",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Lab 5 - Dynamic Linear Models</span>"
    ]
  }
]